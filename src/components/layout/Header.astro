---
import { menuLinks } from "@/site-config";

import Search from "../Search.astro";
//import ThemeToggle from "../ThemeToggle.astro";

const url = new URL(Astro.request.url);
---

<header class="group relative mb-28 flex items-center sm:ps-[4.5rem]" id="main-header">
	<div class="flex justify-center sm:flex-col">
		<a
			aria-current={url.pathname === "/" ? "page" : false}
			class="inline-flex items-center sm:relative sm:inline-block"
			href="/"
		>

      <svg class="me-3 h-16 sm:absolute sm:start-[-5.5rem] sm:me-0 sm:w-24 lg:w-16" viewBox="0 0 150 150" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false">
        <rect width="150" height="150" rx="16" fill="#A7C957"/>
        <circle cx="47.4679" cy="69.4679" r="31.4679" fill="#151B27"/>
        <rect x="88.3234" y="98.0582" width="20.025" height="39.1394" rx="6" transform="rotate(135 88.3234 98.0582)" fill="#151B27"/>
        <circle cx="46.9911" cy="69.9446" r="16.6875" fill="#A7C957"/>
        <circle cx="105.79" cy="75.9883" r="27.6278" fill="#151B27"/>
        <rect x="82.9293" y="70.1102" width="20.025" height="39.1394" rx="6" fill="#151B27"/>
        <circle cx="105.215" cy="75.4127" r="14.3895" fill="#A7C957"/>
        <rect x="65" y="71" width="14" height="18" fill="#151B27"/>
        <rect x="72" y="83" width="15" height="11" fill="#151B27"/>
        <path d="M79.9663 83.1175C80.4366 82.7427 81.129 82.8648 81.4428 83.3779L85.2442 89.5949C85.6935 90.3297 85.0656 91.251 84.2174 91.1014L74.7174 89.4263C73.8692 89.2768 73.5943 88.1963 74.2678 87.6595L79.9663 83.1175Z" fill="#A7C957"/>
      </svg>
		</a>
		<nav
			aria-label="Main menu"
			class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
			id="navigation-menu"
		>
			{
				menuLinks.map((link) => (
					<a
						aria-current={url.pathname === link.path ? "page" : false}
						class="px-4 py-4 underline-offset-2 sm:py-0 sm:hover:underline"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
	<Search />
	<!--<ThemeToggle />-->
	<mobile-button>
		<button
			aria-expanded="false"
			aria-haspopup="menu"
			aria-label="Open main menu"
			class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
			id="toggle-navigation-menu"
			type="button"
		>
			<svg
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
				fill="none"
				focusable="false"
				id="line-svg"
				stroke="currentColor"
				stroke-width="1.5"
				viewBox="0 0 24 24"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"
				></path>
			</svg>
			<svg
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
				class="text-accent"
				fill="none"
				focusable="false"
				id="cross-svg"
				stroke="currentColor"
				stroke-width="1.5"
				viewBox="0 0 24 24"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
			</svg>
		</button>
	</mobile-button>
</header>

<script>
	import { toggleClass } from "@/utils";

	class MobileNavBtn extends HTMLElement {
		private headerEl: HTMLElement;
		private menuOpen: boolean;
		private mobileButtonEl: HTMLButtonElement;

		toggleMobileMenu = () => {
			toggleClass(this.headerEl, "menu-open");
			this.menuOpen = !this.menuOpen;
			this.mobileButtonEl.setAttribute("aria-expanded", this.menuOpen.toString());
		};

		constructor() {
			super();
			this.headerEl = document.getElementById("main-header")!;
			this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
			this.menuOpen = false;

			this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
